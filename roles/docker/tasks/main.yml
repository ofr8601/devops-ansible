---
# tasks file for docker
# Based on https://docs.docker.com/install/linux/docker-ce/centos/

# Copyright (C) 2019 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: uninstall old versions of docker
  become: yes
  yum:
    name: ['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine']
    state: absent
  tags:
    - docker


- name: yum install required packages to create the docker storage
  become: yes
  yum: 
    state: latest 
    name: ['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'selinux-policy', 'selinux-policy-targeted', 'selinux-policy-base']
  tags:
    - docker

#- name: install container-selinudddx
#  yum:
#    name: http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.95-2.el7_6.noarch.rpm
#    state: present

- name: ensure docker group exists
  become: yes
  group:
    name: docker
    state: present
  tags:
    - docker

- name: debug
  command: /bin/bash -c "groups"
  tags:
    - docker

- name: add Docker CE repository
  become: yes
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  tags:
    - docker

- name: yum install the latest version of Docker CE
  become: yes
  yum: 
    state: latest 
    name: docker-ce
  tags:
    - docker

- name: enable docker service
  become: yes
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker

- name: does docker volume group exit?
  become: yes 
  shell: echo -n $(vgdisplay | grep -q 'docker' && echo "Found" || echo "Not found")
  register: docker_vg
  tags:
    - docker

- name: debug docker_vg
  debug:
    var: docker_vg
    verbosity: 1
  tags:
    - docker

# Destroys contents of volume.
- name: configure the block storage driver, if docker volume group doesn't exist
  become: yes
  block:
    - shell: |
        pvcreate /dev/sdb
        vgcreate docker /dev/sdb
        lvcreate --wipesignatures y -n thinpool docker -l 95%VG
        lvcreate --wipesignatures y -n thinpoolmeta docker -l 1%VG
        lvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta

    - copy:
        src: files/etc/lvm/profile/docker-thinpool.profile
        dest: /etc/lvm/profile/docker-thinpool.profile
        owner: root
        group: root
        mode: 0644

    - systemd:
        name: docker
        state: stopped

    - shell: |
        lvchange --metadataprofile docker-thinpool docker/thinpool
        lvs -o+seg_monitor
        rm -Rf /var/lib/docker/* 
  when: docker_vg.stdout == "Not found"
  tags:
    - docker
        
# vagrant-proxyconf doesn't take effect until later, but we need this after docker has been installed for the first time othewise the service will refuse to start
- name: template in /etc/sysconfig/docker
  become: true
  template:
    src: templates/etc/sysconfig/docker.j2
    dest: /etc/sysconfig/docker
    force: yes
  register: sysconfigDocker
  tags:
    - docker

- name: debug
  become: true
  command: /bin/bash -c "cat /etc/sysconfig/docker"
  when: sysconfigDocker.changed
  tags:
    - docker

- name: create /etc/docker/
  become: yes
  file:
    path: /etc/docker/
    state: directory
  tags:
    - docker

- name: configured Docker options (e.g., insecure registry, DNS)
  become: yes
  template:
    src: templates/etc/docker/daemon.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
    force: yes
  register: daemon
  tags:
    - docker

- name: debug
  become: yes
  command: /bin/bash -c "cat /etc/docker/daemon.json"
  when: daemon.changed
  tags:
    - docker

- name: configure EnvironmentFile
  become: yes
  lineinfile:
    path: /etc/systemd/system/multi-user.target.wants/docker.service
    insertafter: "^\\[Service\\]"
    regexp: "^aEnvironmentFile="
    line: "EnvironmentFile=/etc/sysconfig/docker"
  register: environmentFile  
  tags:
    - docker

- name: reload service docker
  become: yes
  systemd:
    name: docker
    daemon_reload: yes
  when: sysconfigDocker.changed or environmentFile.changed or daemon.changed or (docker_vg.stdout == "Not found")
  tags:
    - docker

- name: start and enable docker service
  become: yes
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker

- name: debug
  command: /bin/bash -c "systemctl is-active docker"
  tags:
    - docker

# This wont take affect until after Ansible session ends  
- name: add vagrant user to docker group.
  become: yes
  user: 
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  tags:
    - docker
